Traceback (most recent call last):
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/nbclient/client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/nbclient/client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/nbclient/client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/ben/miniconda3/envs/pyCATHY/lib/python3.10/site-packages/nbclient/client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# ERT observations metadata
# -------------------------
ERT    = {
            'data_type': '$ERT$', # units
            'units': '$\Ohm$', # units transfer_resistances
            'forward_mesh_vtk_file': meshERT, # path to the ERT mesh (vtk file compatible with pygimli or resipy)
            'sequenceERT': sequenceERT, # path to the ERT sequence  (file compatible with pygimli or resipy)
            'instrument': 'Syscal', # Instrument
            'data_format': data_format, # format (raw or preprocessed)
        }

# Initiate an empty dictionnary
# -----------------------------
data_measure = {}
for i, tt in enumerate(time_sampled):

    # csv file observation generated by pygimli
    filename = os.path.join(pathERT, prjERT, 'ER_predicted_sol_t' + str(i) + '.csv')
    data_measure = read_observations(
                                    data_measure,
                                    filename, 
                                    data_type = 'ERT', 
                                    data_err = args.dataErr, # instrumental error
                                    show=True,
                                    tA=tt,
                                    obs_cov_type='data_err', #data_err
                                    elecs=elecs,
                                    meta=ERT
                                    ) # data_err  reciprocal_err
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 6[0m
[1;32m      1[0m [38;5;66;03m# ERT observations metadata[39;00m
[1;32m      2[0m [38;5;66;03m# -------------------------[39;00m
[1;32m      3[0m ERT    [38;5;241m=[39m {
[1;32m      4[0m             [38;5;124m'[39m[38;5;124mdata_type[39m[38;5;124m'[39m: [38;5;124m'[39m[38;5;124m$ERT$[39m[38;5;124m'[39m, [38;5;66;03m# units[39;00m
[1;32m      5[0m             [38;5;124m'[39m[38;5;124munits[39m[38;5;124m'[39m: [38;5;124m'[39m[38;5;124m$[39m[38;5;124m\[39m[38;5;124mOhm$[39m[38;5;124m'[39m, [38;5;66;03m# units transfer_resistances[39;00m
[0;32m----> 6[0m             [38;5;124m'[39m[38;5;124mforward_mesh_vtk_file[39m[38;5;124m'[39m: [43mmeshERT[49m, [38;5;66;03m# path to the ERT mesh (vtk file compatible with pygimli or resipy)[39;00m
[1;32m      7[0m             [38;5;124m'[39m[38;5;124msequenceERT[39m[38;5;124m'[39m: sequenceERT, [38;5;66;03m# path to the ERT sequence  (file compatible with pygimli or resipy)[39;00m
[1;32m      8[0m             [38;5;124m'[39m[38;5;124minstrument[39m[38;5;124m'[39m: [38;5;124m'[39m[38;5;124mSyscal[39m[38;5;124m'[39m, [38;5;66;03m# Instrument[39;00m
[1;32m      9[0m             [38;5;124m'[39m[38;5;124mdata_format[39m[38;5;124m'[39m: data_format, [38;5;66;03m# format (raw or preprocessed)[39;00m
[1;32m     10[0m         }
[1;32m     12[0m [38;5;66;03m# Initiate an empty dictionnary[39;00m
[1;32m     13[0m [38;5;66;03m# -----------------------------[39;00m
[1;32m     14[0m data_measure [38;5;241m=[39m {}

[0;31mNameError[0m: name 'meshERT' is not defined
NameError: name 'meshERT' is not defined



.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/SSHydro/plot_4b_waterTable_from_weil.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_content_SSHydro_plot_4b_waterTable_from_weil.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_SSHydro_plot_4b_waterTable_from_weil.py:


Plot Water Table
================

Weill, S., et al. ¬´ Coupling Water Flow and Solute Transport into a Physically-Based Surface‚ÄìSubsurface Hydrological Model ¬ª. 
Advances in Water Resources, vol. 34, no 1, janvier 2011, p. 128‚Äë36. DOI.org (Crossref), 
https://doi.org/10.1016/j.advwatres.2010.10.001.

This example shows how to use pyCATHY object to plot the water table for each node points.

*Estimated time to run the notebook = 5min*

.. GENERATED FROM PYTHON SOURCE LINES 17-20

Here we need to import `cathy_tools` class that control the CATHY core files preprocessing and processing
We also import `cathy_plots` to render the results


.. GENERATED FROM PYTHON SOURCE LINES 20-26

.. code-block:: default

    from pyCATHY import cathy_tools
    from pyCATHY.plotters import cathy_plots as cplt
    from pyCATHY.importers import cathy_inputs as in_CT
    from pyCATHY.importers import cathy_outputs as out_CT
    import pyCATHY.meshtools as mt








.. GENERATED FROM PYTHON SOURCE LINES 27-28

if you add True to verbose, the processor log will be printed in the window shell

.. GENERATED FROM PYTHON SOURCE LINES 28-37

.. code-block:: default

    path2prj = "weil_exemple_outputs_WaterTable_plot"  # add your local path here
    simu = cathy_tools.CATHY(dirName=path2prj)



    # ```{note}
    # Here is a note
    # ```





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    üèÅ Initiate CATHY object




.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: default


    # simu.update_parm(NUMVP=3, NODVP=[337,338,339,440,441,442], 
    #                   NR=3, ID_NR=[337,338,339,440,441,442],
    #                   # NUM_QOUT=3, ID_QOUT=[440,441,442]
    #                  )








.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: default

    simu.run_processor(TRAFLAG=0, verbose=True)




.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/examples/SSHydro/plot_4b_waterTable_from_weil.py", line 45, in <module>
        simu.run_processor(TRAFLAG=0, verbose=True)
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/pyCATHY/cathy_tools.py", line 487, in run_processor
        self.update_parm(**kwargs)
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/pyCATHY/cathy_tools.py", line 1420, in update_parm
        self.update_cathyH(
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/pyCATHY/cathy_tools.py", line 638, in update_cathyH
        self.update_veg_map()
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/pyCATHY/cathy_tools.py", line 2787, in update_veg_map
        exclude_veg = self._check_outside_DEM(indice_veg)
      File "/home/ben/Documents/GitHub/BenjMy/pycathy_wrapper/pyCATHY/cathy_tools.py", line 2810, in _check_outside_DEM
        return exclude_out_ind
    UnboundLocalError: local variable 'exclude_out_ind' referenced before assignment




.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: default

    import numpy as np
    d_sw, t_sw = simu.read_outputs('sw')
    layers_top, layers_bottom = mt.get_layer_depths(simu.dem_parameters)
    xyz_df = simu.read_outputs('xyz')


.. GENERATED FROM PYTHON SOURCE LINES 55-104

.. code-block:: default

    time = 3

    water_table_bool = (d_sw == 1)

    sat_elevation = np.vstack([d_sw[time,:],xyz_df[['x','y','z']].to_numpy().T]).T
    sat_elevation_select = sat_elevation[water_table_bool[time,:]]

    def max_z_indices_for_duplicate_xy(xyz):
        xy = xyz[:, :2]  # Extract XY values from XYZ array
        unique_xy = np.unique(xy, axis=0)  # Get unique XY values
        max_z_indices_list = []
        for xy_value in unique_xy:
            indices = np.where(np.all(xy == xy_value, axis=1))[0]
            max_z_index = indices[np.argmax(xyz[indices, -1])]
            max_z_indices_list.append(max_z_index)

        return max_z_indices_list


    max_z_indices_list = max_z_indices_for_duplicate_xy(sat_elevation[:,1:4])
    topo = sat_elevation[max_z_indices_list]


    max_z_indices_list = max_z_indices_for_duplicate_xy(sat_elevation_select[:,1:4])
    sat_elevation_select_max = sat_elevation_select[max_z_indices_list]


    import matplotlib.pyplot as plt
    fig, ax = plt.subplots()
    cb = ax.scatter(sat_elevation_select_max[:,1],
                    sat_elevation_select_max[:,2],
                    c=sat_elevation_select_max[:,3])
    cbar = plt.colorbar(cb)
    cbar.set_label('GW elevation')


    fig, ax = plt.subplots()
    cb = ax.scatter(sat_elevation_select_max[:,1],
                    sat_elevation_select_max[:,2],
                    c=topo[:,3]-sat_elevation_select_max[:,3]
                    )
    cbar = plt.colorbar(cb)
    cbar.set_label('GW depth')


    # fig, ax = plt.subplots()
    # ax.imshow(sat_depth_select_max[:,1],sat_depth_select_max[:,2])



.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: default

    simu.show(prop="hgsfdet")


.. GENERATED FROM PYTHON SOURCE LINES 110-112

.. code-block:: default

    simu.show(prop="dtcoupling", yprop="Atmpot-d")


.. GENERATED FROM PYTHON SOURCE LINES 113-115

.. code-block:: default

    simu.show(prop="hgraph")


.. GENERATED FROM PYTHON SOURCE LINES 116-118

.. code-block:: default

    simu.show(prop="cumflowvol")


.. GENERATED FROM PYTHON SOURCE LINES 119-120

To select another time step change the value in the function argument

.. GENERATED FROM PYTHON SOURCE LINES 120-127

.. code-block:: default

    cplt.show_vtk(
        unit="pressure",
        timeStep=1,
        notebook=True,
        path=simu.workdir + "/my_cathy_prj/vtk/",
    )


.. GENERATED FROM PYTHON SOURCE LINES 128-136

.. code-block:: default

    cplt.show_vtk(
        unit="saturation",
        timeStep=1,
        notebook=True,
        path=simu.workdir + "/my_cathy_prj/vtk/",
    )



.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: default

    simu.show_input(prop="root_map")





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.006 seconds)


.. _sphx_glr_download_content_SSHydro_plot_4b_waterTable_from_weil.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_4b_waterTable_from_weil.py <plot_4b_waterTable_from_weil.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_4b_waterTable_from_weil.ipynb <plot_4b_waterTable_from_weil.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

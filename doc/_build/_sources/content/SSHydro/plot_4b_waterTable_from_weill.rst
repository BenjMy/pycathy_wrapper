
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/SSHydro/plot_4b_waterTable_from_weill.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_SSHydro_plot_4b_waterTable_from_weill.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_SSHydro_plot_4b_waterTable_from_weill.py:


Plot Water Table
================

Weill, S., et al. ¬´ Coupling Water Flow and Solute Transport into a Physically-Based Surface‚ÄìSubsurface Hydrological Model ¬ª. 
Advances in Water Resources, vol. 34, no 1, janvier 2011, p. 128‚Äë36. DOI.org (Crossref), 
https://doi.org/10.1016/j.advwatres.2010.10.001.

This example shows how to use pyCATHY object to plot the water table for each node points.

*Estimated time to run the notebook = 5min*

.. GENERATED FROM PYTHON SOURCE LINES 17-20

Here we need to import `cathy_tools` class that control the CATHY core files preprocessing and processing
We also import `cathy_plots` to render the results


.. GENERATED FROM PYTHON SOURCE LINES 20-26

.. code-block:: Python

    from pyCATHY import cathy_tools
    from pyCATHY.plotters import cathy_plots as cplt
    from pyCATHY.importers import cathy_inputs as in_CT
    from pyCATHY.importers import cathy_outputs as out_CT
    import pyCATHY.meshtools as mt








.. GENERATED FROM PYTHON SOURCE LINES 27-28

if you add True to verbose, the processor log will be printed in the window shell

.. GENERATED FROM PYTHON SOURCE LINES 28-37

.. code-block:: Python

    path2prj = "weill_exemple_outputs_WaterTable_plot"  # add your local path here
    simu = cathy_tools.CATHY(dirName=path2prj)



    # ```{note}
    # Here is a note
    # ```





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    üèÅ Initiate CATHY object




.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: Python


    # simu.update_parm(NUMVP=3, NODVP=[337,338,339,440,441,442], 
    #                   NR=3, ID_NR=[337,338,339,440,441,442],
    #                   # NUM_QOUT=3, ID_QOUT=[440,441,442]
    #                  )








.. GENERATED FROM PYTHON SOURCE LINES 45-60

.. code-block:: Python


    simu.update_parm(VTKF=2)


    simu.run_preprocessor()

    simu.run_processor(IPRT1=2, 
                        DTMIN=1e-2,
                        DTMAX=1e2,
                        DELTAT=5,
                       TRAFLAG=0,
                       verbose=False
                       )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    üîÑ Update parm file 
    üîÑ Update hap.in file
    üîÑ Update dem_parameters file 
    üîÑ Update dem_parameters file 
    üç≥ gfortran compilation
    üëü Run preprocessor
    üîÑ Update parm file 
    üõ†  Recompile src files [3s]
    üç≥ gfortran compilation [7s]
    b''
    üëü Run processor




.. GENERATED FROM PYTHON SOURCE LINES 61-66

.. code-block:: Python

    import numpy as np
    d_sw, t_sw = simu.read_outputs('sw')
    layers_top, layers_bottom = mt.get_layer_depths(simu.dem_parameters)
    xyz_df = simu.read_outputs('xyz')








.. GENERATED FROM PYTHON SOURCE LINES 67-116

.. code-block:: Python

    time = 3

    water_table_bool = (d_sw == 1)

    sat_elevation = np.vstack([d_sw.iloc[time,:],xyz_df[['x','y','z']].to_numpy().T]).T
    sat_elevation_select = sat_elevation[water_table_bool.iloc[time,:]]

    def max_z_indices_for_duplicate_xy(xyz):
        xy = xyz[:, :2]  # Extract XY values from XYZ array
        unique_xy = np.unique(xy, axis=0)  # Get unique XY values
        max_z_indices_list = []
        for xy_value in unique_xy:
            indices = np.where(np.all(xy == xy_value, axis=1))[0]
            max_z_index = indices[np.argmax(xyz[indices, -1])]
            max_z_indices_list.append(max_z_index)

        return max_z_indices_list


    max_z_indices_list = max_z_indices_for_duplicate_xy(sat_elevation[:,1:4])
    topo = sat_elevation[max_z_indices_list]


    max_z_indices_list = max_z_indices_for_duplicate_xy(sat_elevation_select[:,1:4])
    sat_elevation_select_max = sat_elevation_select[max_z_indices_list]


    import matplotlib.pyplot as plt
    fig, ax = plt.subplots()
    cb = ax.scatter(sat_elevation_select_max[:,1],
                    sat_elevation_select_max[:,2],
                    c=sat_elevation_select_max[:,3])
    cbar = plt.colorbar(cb)
    cbar.set_label('GW elevation')


    fig, ax = plt.subplots()
    cb = ax.scatter(sat_elevation_select_max[:,1],
                    sat_elevation_select_max[:,2],
                    c=topo[:,3]-sat_elevation_select_max[:,3]
                    )
    cbar = plt.colorbar(cb)
    cbar.set_label('GW depth')


    # fig, ax = plt.subplots()
    # ax.imshow(sat_depth_select_max[:,1],sat_depth_select_max[:,2])





.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_001.png
         :alt: plot 4b waterTable from weill
         :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_002.png
         :alt: plot 4b waterTable from weill
         :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 119-121

.. code-block:: Python

    simu.show(prop="hgsfdet")




.. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_003.png
   :alt: plot 4b waterTable from weill
   :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 122-124

.. code-block:: Python

    simu.show(prop="dtcoupling", yprop="Atmpot-d")




.. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_004.png
   :alt: plot 4b waterTable from weill
   :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/pyCATHY/importers/cathy_outputs.py:322: UserWarning: Input line 3 contained no data and will not be counted towards `max_rows=964`.  This differs from the behaviour in NumPy <=1.22 which counted lines rather than rows.  If desired, the previous behaviour can be achieved by using `itertools.islice`.
    Please see the 1.23 release notes for an example on how to do this.  If you wish to ignore this warning, use `warnings.filterwarnings`.  This warning is expected to be removed in the future and is given only once per `loadtxt` call.
      dtcoupling = np.loadtxt(dtcoupling_file, skiprows=2, max_rows=2 + nstep)




.. GENERATED FROM PYTHON SOURCE LINES 125-127

.. code-block:: Python

    simu.show(prop="hgraph")




.. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_005.png
   :alt: plot 4b waterTable from weill
   :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 128-130

.. code-block:: Python

    simu.show(prop="cumflowvol")




.. image-sg:: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_006.png
   :alt: Cumulative flow volume
   :srcset: /content/SSHydro/images/sphx_glr_plot_4b_waterTable_from_weill_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 131-138

To select another time step change the value in the function argument
cplt.show_vtk(
    unit="pressure",
    timeStep=1,
    notebook=False,
    path='./' + path2prj + "/my_cathy_prj/vtk/",
)

.. GENERATED FROM PYTHON SOURCE LINES 138-148

.. code-block:: Python


    # #%%  3d visualiation of the water saturation for the time step 1
    # cplt.show_vtk(
    #     unit="saturation",
    #     timeStep=1,
    #     notebook=False,
    #     path='./' + path2prj + "/my_cathy_prj/vtk/",
    # )









.. GENERATED FROM PYTHON SOURCE LINES 149-150

simu.show_input(prop="root_map")


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 52.880 seconds)


.. _sphx_glr_download_content_SSHydro_plot_4b_waterTable_from_weill.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_4b_waterTable_from_weill.ipynb <plot_4b_waterTable_from_weill.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_4b_waterTable_from_weill.py <plot_4b_waterTable_from_weill.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_4b_waterTable_from_weill.zip <plot_4b_waterTable_from_weill.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

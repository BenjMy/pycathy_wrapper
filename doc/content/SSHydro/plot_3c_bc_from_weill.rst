
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "content/SSHydro/plot_3c_bc_from_weill.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_content_SSHydro_plot_3c_bc_from_weill.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_content_SSHydro_plot_3c_bc_from_weill.py:


Update and show Boundary conditions
===================================

Weill, S., et al. « Coupling Water Flow and Solute Transport into a Physically-Based Surface–Subsurface Hydrological Model ». 
Advances in Water Resources, vol. 34, no 1, janvier 2011, p. 128‑36. DOI.org (Crossref), 
https://doi.org/10.1016/j.advwatres.2010.10.001.


This example shows how to use pyCATHY object to update a 3d BC properties from a DEM and run the hydrological model.

Questions:
    - what kind of boundary condition are set at the outlet point by default?
    - Default side boundary conditions?

For a good reading see: Surface-subsurface flow modeling with path-based runoff 
routing, boundary condition-based coupling, and assimilation of multisource observation data
WATER RESOURCES RESEARCH, VOL. 46, W02512, doi:10.1029/2008WR007536, 2010

Exemples treated in the notebook:
Scenario with Water Table:
- vertically hydrostatic initial conditions are used, with the water table (Psi = 0 m) positioned at 0.4 m above the bedrock

1st config: Dirichlet runs: 
    - The outlet nodes at the bottom layer form a constant head boundary of zero pressure head 
    and the nodes above along the outlet face have a no-flow condition imposed
2nd config: return flow runs:
    - the entire outlet face is a no-flow boundary and water is allowed 
    to leave the system only by exfiltration (return flow) through the surface.



*Estimated time to run the notebook = 5min*

.. GENERATED FROM PYTHON SOURCE LINES 38-55

.. code-block:: Python



    # !! run preprocessor change the DEM shape !
    # dtm_13 does not have the same shape anymore!

    import os

    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd

    import pyCATHY.meshtools as mt
    from pyCATHY import cathy_tools
    from pyCATHY.importers import cathy_inputs as in_CT
    from pyCATHY.importers import cathy_outputs as out_CT
    from pyCATHY.plotters import cathy_plots as cplt








.. GENERATED FROM PYTHON SOURCE LINES 56-57

------------------------

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: Python

    path2prj = "../SSHydro/"  # add your local path here
    simu = cathy_tools.CATHY(dirName=path2prj, prj_name="bc_from_weill", clear_src=True)

    rootpath = os.path.join(simu.workdir + simu.project_name)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    🏁 Initiate CATHY object
    clear src files
    😟 src files not found
    working directory is:/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/examples/SSHydro/../SSHydro/
    📥 Fetch cathy src files
    📥 Fetch cathy prepro src files
    📥 Fetch cathy inputfiles




.. GENERATED FROM PYTHON SOURCE LINES 62-63

the dimension of the mesh is squared (20,20)

.. GENERATED FROM PYTHON SOURCE LINES 63-101

.. code-block:: Python



    dem_mat, str_hd_dem = in_CT.read_dem(
        os.path.join(simu.workdir, simu.project_name, "prepro/dem"),
        os.path.join(simu.workdir, simu.project_name, "prepro/dtm_13.val"),
    )

    # simu.show_input(prop="dem")

    maxdepth = 10
    # # linear z depth
    # # -------------------------------------------------------------
    # zb = np.linspace(0, maxdepth, 10)
    # nstr = len(zb)
    # zr = list((np.ones(len(zb))) / (nstr))

    # sum(zr)

    zb = np.geomspace(1e-1, maxdepth, num=15)
    nstr=len(zb)
    zr = [abs(zb[0]/maxdepth)]
    zr.extend(list(abs(np.diff(zb)/maxdepth)))

    # np.shape(dem_mat)
    simu.update_prepo_inputs(
        DEM=dem_mat,
        nstr=nstr,
        zratio=zr,
        base=max(zb),
    )
    # fig = plt.figure()
    # ax = plt.axes(projection="3d")
    # simu.show_input(prop="dem", ax=ax)

    # simu.update_soil()
    simu.create_mesh_vtk(verbose=True)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    🔄 Update hap.in file
    🔄 update dem_parameters file 
    🔄 Update dtm_13 file
    ───────────────────────────────────────────────────────────────────────────────────────────────────────── ⚠ warning messages above ⚠ ─────────────────────────────────────────────────────────────────────────────────────────────────────────

                                The parm dictionnary is empty
                                Falling back to defaults to update CATHYH
                                This can have consequences !!
                            
    ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
    🔄 update parm file 
    ───────────────────────────────────────────────────────────────────────────────────────────────────────── ⚠ warning messages above ⚠ ─────────────────────────────────────────────────────────────────────────────────────────────────────────
    ['Adjusting TMAX with respect to time of interests requested\n']
    ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
    🔄 update dem_parameters file 
    🍳 gfortran compilation
    👟 Run preprocessor

     wbb...

     searching the dtm_13.val input file...
     assigned nodata value =  -9999.0000000000000     

     number of processed cells =         400

     ...wbb completed

     rn...
     csort I...
     ...completed

     depit...
     dem modifications =            0
     dem modifications =            0 (total)
     ...completed

     csort II...
     ...completed

     cca...

     contour curvature threshold value =    9.99999996E+11
     ...completed

     smean...
     mean (min,max) facet slope =  0.052056253 ( 0.020000000, 0.053851648)
     ...completed

     dsf...
     the drainage direction of the outlet cell (           8 ) is used
     ...completed

     hg...
     ...completed

     saving the data in the basin_b/basin_i files...

     ...rn completed

     mrbb...


     Select the header type:
     0) None
     1) ESRI ascii file
     2) GRASS ascii file
     (Ctrl C to exit)

     -> 
     Select the nodata value:
     (Ctrl C to exit)

     -> 
     Select the pointer system:
     1) HAP system
     2) Arc/Gis system
     (Ctrl C to exit)

     ->  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dem file

     min value = 0.335000E+00
     max value = 0.100000E+01
     number of cells =   400
     mean value = 0.667500E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     lakes_map file

     min value =     0
     max value =     0
     number of cells =   400
     mean value =     0.000000

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     zone file

     min value =     1
     max value =     1
     number of cells =   400
     mean value =     1.000000

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_w_1 file

     min value = 0.515524E+00
     max value = 0.100000E+01
     number of cells =   400
     mean value = 0.607575E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_w_2 file

     min value = 0.000000E+00
     max value = 0.484476E+00
     number of cells =   400
     mean value = 0.392425E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_p_outflow_1 file

     min value =     4
     max value =     8
     number of cells =   400
     mean value =     4.200000

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_p_outflow_2 file

     min value =     0
     max value =     9
     number of cells =   400
     mean value =     6.792500

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     A_inflow file

     min value = 0.000000000000E+00
     max value = 0.997499787031E+02
     number of cells =   400
     mean value = 0.388447785378E+01

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_local_slope_1 file

     min value = 0.200000E-01
     max value = 0.500000E-01
     number of cells =   400
     mean value = 0.485000E-01

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_local_slope_2 file

     min value = 0.000000E+00
     max value = 0.494975E-01
     number of cells =   400
     mean value = 0.400930E-01

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_epl_1 file

     min value = 0.500000E+00
     max value = 0.500000E+00
     number of cells =   400
     mean value = 0.500000E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_epl_2 file

     min value = 0.000000E+00
     max value = 0.707107E+00
     number of cells =   400
     mean value = 0.572757E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_kSs1_sf_1 file

     min value = 0.240040E+02
     max value = 0.240040E+02
     number of cells =   400
     mean value = 0.240040E+02

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_kSs1_sf_2 file

     min value = 0.000000E+00
     max value = 0.240040E+02
     number of cells =   400
     mean value = 0.194432E+02

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_Ws1_sf file

     min value = 0.100000E+01
     max value = 0.100000E+01
     number of cells =   400
     mean value = 0.100000E+01

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_Ws1_sf_2 file

     min value = 0.000000E+00
     max value = 0.100000E+01
     number of cells =   400
     mean value = 0.810000E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_b1_sf file

     min value = 0.000000E+00
     max value = 0.000000E+00
     number of cells =   400
     mean value = 0.000000E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_y1_sf file

     min value = 0.000000E+00
     max value = 0.000000E+00
     number of cells =   400
     mean value = 0.000000E+00

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_hcID file

     min value =     0
     max value =     0
     number of cells =   400
     mean value =     0.000000

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_q_output file

     min value =     0
     max value =     0
     number of cells =   400
     mean value =     0.000000

     writing the output file...

     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     dtm_nrc file

     min value = 0.100000E+01
     max value = 0.100000E+01
     number of cells =   400
     mean value = 0.100000E+01

     writing the output file...

     ...mrbb completed

     bb2shp...

     writing file river_net.shp

    Note: The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG IEEE_DENORMAL

    🔄 update parm file 
    🛠  Recompile src files [4s]
    🍳 gfortran compilation [8s]
    b''
    👟 Run processor
    b'\n\n IPRT1=3: Program terminating after output of X, Y, Z coordinate values\n'
    b''




.. GENERATED FROM PYTHON SOURCE LINES 102-137

.. code-block:: Python

    def check_surf_routing_param(simu,):
    
    
        dtm2check = ['dtm_w_1',
                     'dtm_Ws1_sf_1',
                     'dtm_y1_sf',
                     'dtm_p_outflow_1',
                     'dtm_q_output',
                     'dtm_local_slope_1',
                     'dtm_local_slope_1',
                     'qoi_a',
                     'dtm_A_inflow',
                     'dtm_nrc',
                     # 'dem',
                     ]
    
        fig, axs = plt.subplots(3,4, sharex=(True),
                                sharey=(True),
                                )
        axs = axs.ravel()
        for i, dtm in enumerate(dtm2check):
            simu.show_input(dtm,ax=axs[i])
            plt.tight_layout()
    
            # ax.yaxis.set_major_formatter(FormatStrFormatter('%3.4e'))
            # ax.xaxis.set_major_formatter(FormatStrFormatter('%3.4e'))
            
            # plt.savefig(figFolder + '/dtm_Ws1_sf_1.png', 
            #             dpi=400, bbox_inches='tight', pad_inches=0)
        
        
    # Check surface routing parameters
    # --------------------------------
    check_surf_routing_param(simu)




.. image-sg:: /content/SSHydro/images/sphx_glr_plot_3c_bc_from_weill_001.png
   :alt: dtm_w_1, dtm_Ws1_sf_1, dtm_y1_sf, dtm_p_outflow_1, dtm_q_output, dtm_local_slope_1, dtm_local_slope_1, dtm_A_inflow, dtm_nrc
   :srcset: /content/SSHydro/images/sphx_glr_plot_3c_bc_from_weill_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    unknown file requested
    no proxy to plot




.. GENERATED FROM PYTHON SOURCE LINES 138-170

.. code-block:: Python


    # .. note:
    #     The boundary conditions are defined in the nansfdirbc (Dirichlet),
    #     nansfneubc (Neumann), and sfbc (seepage face) files.

    #     We have two types of boundary conditions (BC):
    #     - Neumann BC (or specifed flux)
    #     - Dirichlet BC (or pressure).


    # .. note:
    #     - Pioggia: condizioni di Neumann. Quando non ci può più essere
    #     infiltrazione metto Dirichlet.
    #     - Evaporazione: si indica un limite di pressione minimo ( Pmin ) al di
    #     sotto del quale si ha uno switch da Neumann a Dirichlet
    #     (in quanto al di sotto di questo valore non si ha più evapotraspirazione).

    # .. note:
    #     The boundary condition for any given surface node can switch between a
    #     Dirichlet condition and a Neumann condition depending on the saturation
    #     (or pressure) state of that node.

    # .. note:
    #     A Neumann (or specified flux) boundary condition corresponds to
    #     atmosphere-controlled infiltration or exfiltration, with the flux equal
    #     to the rainfall or potential evaporation rate given by the atmospheric input data.
    #     When the surface node reaches a threshold level of saturation or moisture deficit,
    #     the boundary condition is switched to a Dirichlet (specified head) condition,
    #     and the infiltration or exfiltration process becomes soil limited [1].










.. GENERATED FROM PYTHON SOURCE LINES 171-210

.. code-block:: Python


    # exemple provided by Laura B.
    # ----------------------------

    # C     Write dirbc
    #       write(33,*) 0.0, 'time'
    #       write(33,*) '0', a
    #       do i=1,nnod3
    #          if ((x(i).eq.0).or.(x(i).eq.5).or.(y(i).eq.0).or.
    #      1       (y(i).eq.5))then
    #          write(33,*) i
    #          endif
    #       enddo
    #       do i=1,nnod3
    #          if ((x(i).eq.0).or.(x(i).eq.5).or.(y(i).eq.0).or.
    #      1       (y(i).eq.5))then
    #          write(33,*) -z(i)-WTdepth
    #          endif
    #       enddo

    #       write(33,*) 2e+20, 'time'
    #       write(33,*) '0', a
    #       do i=1,nnod3
    #          if ((x(i).eq.0).or.(x(i).eq.5).or.(y(i).eq.0).or.
    #      1       (y(i).eq.5))then
    #          write(33,*) i
    #          endif
    #       enddo
    #       do i=1,nnod3
    #          if ((x(i).eq.0).or.(x(i).eq.5).or.(y(i).eq.0).or.
    #      1       (y(i).eq.5))then
    #          write(33,*) -z(i)-WTdepth
    #          endif
    #       enddo

    # modicare il valore di NPMAX nel file 27 CATHY.H nel caso
    # in cui si inseriscano dei NDIRC ed il valore di NP2MAX nel caso si inseriscano dei
    # NDIR. I valori di NPMAX e NP2MAX corrispondono al numero massimo
    # di nodi NDIRC e NDIR che si possono inserire.







.. GENERATED FROM PYTHON SOURCE LINES 211-223

.. code-block:: Python



    df_atmbc = simu.read_inputs('atmbc')
    # simu.atmbc

    simu.update_atmbc(   
                        HSPATM=1,
                        IETO=0,
                        time=list(df_atmbc['time']),
                        netValue=list(df_atmbc['value']),
                        )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    🔄 Update atmbc
    🔄 update parm file 




.. GENERATED FROM PYTHON SOURCE LINES 224-225

Dirichlet Boundary conditions (or specified pressure) at time t

.. GENERATED FROM PYTHON SOURCE LINES 225-242

.. code-block:: Python


    # - To simulate the no-flow boundaries conditions for the bottom and
    #   vertical sides of the domain it is necessary to set NDIR and NDIRC
    #   equal to zero.
    # - To simulate different boundary conditions, it is necessary to
    #   indicate the number of selected nodes through NDIR or NDIRC,
    #   then to specify the node ID’s that you want to consider and
    #   eventually the value of pressure head or flux that you want to assign.
    # %matplotlib auto

    # try:
    #     del simu.mesh_bound_cond_df
    # except:
    #     pass
    # simu.update_nansfdirbc(no_flow=True)
    # meshbc = simu.mesh_bound_cond_df








.. GENERATED FROM PYTHON SOURCE LINES 243-255

.. code-block:: Python

    try:
        del simu.mesh_bound_cond_df
    except:
        pass
    simu.update_nansfdirbc(no_flow=True,
                           #time=df_atmbc['time'].values
                           )
    meshbc = simu.mesh_bound_cond_df

    cplt.plot_mesh_bounds('nansfdirbc',meshbc, time=0)




.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/home/z0272571a@CAMPUS.CSIC.ES/Nextcloud/BenCSIC/Codes/BenjMy/pycathy_wrapper/examples/SSHydro/plot_3c_bc_from_weill.py", line 250, in <module>
        meshbc = simu.mesh_bound_cond_df
    AttributeError: 'CATHY' object has no attribute 'mesh_bound_cond_df'




.. GENERATED FROM PYTHON SOURCE LINES 256-261

Neumann boundary conditions (or specifed flux) at time t
try:
    del simu.mesh_bound_cond_df
except:
    pass

.. GENERATED FROM PYTHON SOURCE LINES 261-269

.. code-block:: Python

    simu.update_nansfneubc(no_flow=True)
    meshbc = simu.mesh_bound_cond_df


    cplt.plot_mesh_bounds('nansfdirbc',meshbc, time=0)
    cplt.plot_mesh_bounds('nansfneubc',meshbc, time=0)



.. GENERATED FROM PYTHON SOURCE LINES 270-271

.. code-block:: Python

    simu.update_sfbc(no_flow=True)

.. GENERATED FROM PYTHON SOURCE LINES 272-276

.. code-block:: Python


    # test
    simu.show_bc()


.. GENERATED FROM PYTHON SOURCE LINES 277-282

.. code-block:: Python


    simu.update_parm(DELTAT=1e3)
    simu.run_processor(IPRT1=2, TRAFLAG=0, verbose=True)



.. GENERATED FROM PYTHON SOURCE LINES 283-285

saturated domain cause the outlet discharge to quickly reach its peak, 
followed by a slow recession due to decreasing gradients as exfiltration proceeds.

.. GENERATED FROM PYTHON SOURCE LINES 285-302

.. code-block:: Python


    pathFig = os.path.join(simu.workdir,simu.project_name,'figs')

    if os.path.exists(pathFig) is False:
        os.makedirs(pathFig)

    # Surface runoff hydrograph: plot the computed discharge at the outlet (streamflow)

    fig, ax = plt.subplots()
    simu.show(prop='hgraph',ax=ax)
    fig.savefig(pathFig + '/hgraph_noflow_lat_bottom.png', dpi=350)

    # Plot water table changes
    # -----------------------------------------------------------
    # simu.show(prop='wtdepth')



.. GENERATED FROM PYTHON SOURCE LINES 303-310

.. code-block:: Python

    simu.show(prop='cumflowvol')

    # show_DEM_caracteristic_points()

    df_sw = simu.read_outputs('sw')



.. GENERATED FROM PYTHON SOURCE LINES 311-317

.. code-block:: Python



    simu.update_nansfdirbc(no_flow=True,
                           #time=df_atmbc['time'].values
                           )



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 9.152 seconds)


.. _sphx_glr_download_content_SSHydro_plot_3c_bc_from_weill.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_3c_bc_from_weill.ipynb <plot_3c_bc_from_weill.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_3c_bc_from_weill.py <plot_3c_bc_from_weill.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
